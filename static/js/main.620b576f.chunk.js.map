{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/CardList.js","components/Scroll.js","components/Footer.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchChange","className","type","placeholder","onChange","Card","id","name","email","src","alt","CardList","robots","map","user","Scroll","props","style","overflowY","borderTop","borderBottom","height","children","Footer","href","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAeeA,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKC,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCKXK,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OACI,sBAAKP,UAAU,sDAAf,UACI,qBAAKQ,IAAG,+BAA0BH,EAAGC,EAA7B,YAA6CG,IAAI,WACzD,gCACI,6BAAKH,IACL,4BAAIC,WCiBLG,EAtBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAMhB,OACI,8BAEQA,EAAOC,KAAI,SAAAC,GACP,OAAQ,cAAC,EAAD,CAEIR,GAAIQ,EAAKR,GACTC,KAAMO,EAAKP,KACXC,MAAOM,EAAKN,OAHPM,EAAKR,UCJ3BS,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,UAAW,oBAAqBC,aAAc,oBAAqBC,OAAQ,QAA9G,SACKL,EAAMM,YCIJC,G,MANA,WACX,OAAQ,iCACI,yDAA2B,mBAAGC,KAAK,4BAAR,iBAA3B,wBAA2F,mBAAGA,KAAK,mCAAR,yBAA3F,WCqBDC,E,kDAtBX,WAAYT,GAAQ,IAAD,8BACf,cAAMA,IAEDU,MAAQ,CACTC,UAAU,GAJC,E,8DAQDC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACJ,0DAGJG,KAAKd,MAAMM,a,GAnBCU,aCkDZC,G,wDAzCX,aAAe,IAAD,8BACV,gBAeJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAd1C,EAAKZ,MAAQ,CACTd,OAAQ,GACRwB,YAAa,IALP,E,gEASO,IAAD,OAChBG,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEnB,OAAQ+B,S,+BAQrC,IAAD,EAC2Bb,KAAKJ,MAA7Bd,EADH,EACGA,OAAQwB,EADX,EACWA,YAEVQ,EAAiBhC,EAAOiC,QAAO,SAAAC,GACjC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAASZ,EAAYW,kBAGzD,OAAQH,EAAeK,OAA8B,sBAAKhD,UAAU,KAAf,UACG,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAc8B,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUtB,OAAQgC,QAG1B,cAAC,EAAD,OARxB,6C,GA7BtBZ,cCGHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.620b576f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div className=\"pa2\" >\r\n            <input \r\n                className=\"pa3 ba b--green bg-lightest-blue\"\r\n                type=\"search\"\r\n                placeholder=\"Search Robots\"\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Card = ({id, name, email}) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img src={`https://robohash.org/${id+name}?200x200`} alt='robots' />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    // This was for testing the ErrorBoundry\r\n    // if (true) {\r\n    //     throw new Error('NOOOO!!!!');\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map(user => {\r\n                    return (<Card \r\n                                key={user.id} \r\n                                id={user.id} \r\n                                name={user.name} \r\n                                email={user.email} \r\n                            />);\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', borderTop: '2px solid #1347b6', borderBottom: '2px solid #1347b6', height: '75vh' }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return (<footer>\r\n                <p>RoboFriends designed by <a href=\"https://zerotomastery.io/\">ZTM</a> edited and coded by <a href=\"https://killercoder.netlify.app/\">KillerCoder</a>.</p>\r\n            </footer>);\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Ooops! That is not good!</h1>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport SearchBox from '../components/SearchBox';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport Footer from '../components/Footer';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots: users }));\r\n\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        });\r\n\r\n        return !filteredRobots.length ? <h1>Loading</h1> : ( <div className=\"tc\" >\r\n                                                                <h1 className='f1'>RoboFriends</h1>\r\n                                                                <SearchBox searchChange={this.onSearchChange} />\r\n                                                                <Scroll>\r\n                                                                    <ErrorBoundry>\r\n                                                                        <CardList robots={filteredRobots} />\r\n                                                                    </ErrorBoundry>\r\n                                                                </Scroll>\r\n                                                                <Footer />\r\n                                                            </div>);\r\n    }\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}